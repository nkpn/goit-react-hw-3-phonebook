{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\projects\\\\goit-react-hw-03-phonebook\\\\src\\\\components\\\\App.js\";\n//* Service\nimport React, { Component } from 'react';\nimport notify from 'helpers/Toast';\nimport { ToastContainer } from 'react-toastify';\nimport '../index.css';\nimport { saveToLS } from 'helpers/localStorage';\nimport { getFromLS } from 'helpers/localStorage'; //* Components\n\nimport Container from './Container';\nimport SubmitForm from './SubmitForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [...this.props.contacts],\n      filter: ''\n    };\n\n    this.AddContactOnSubmit = data => {\n      const contact = {\n        name: data.name,\n        number: data.number,\n        id: data.id\n      };\n\n      if (this.state.contacts.find(contact => contact.name.toLowerCase() === data.name.toLowerCase())) {\n        notify(data.name);\n        return;\n      }\n\n      this.setState(preventState => ({\n        contacts: [contact, ...preventState.contacts]\n      }));\n    };\n\n    this.deleteContact = data => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== data)\n      }));\n    };\n\n    this.onFilter = event => {\n      this.setState({\n        filter: event.currentTarget.value\n      });\n    };\n\n    this.getVisibleContacts = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(({\n        name\n      }) => name.toLowerCase().includes(normalizedFilter));\n    };\n  }\n\n  componentDidMount() {\n    // const contacts = localStorage.getItem('contacts');\n    // const parsedContacts = JSON.parse(contacts);\n    this.setState({\n      contacts: getFromLS('contacts')\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      saveToLS('contacts', this.state.contacts); // localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {\n      filter,\n      contacts\n    } = this.state;\n    const {\n      deleteContact,\n      onFilter,\n      AddContactOnSubmit\n    } = this;\n    const visibleContacts = this.getVisibleContacts();\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitForm, {\n        onSubmit: AddContactOnSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), contacts.length >= 2 && /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: onFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: visibleContacts,\n        deleteContact: deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Code/projects/goit-react-hw-03-phonebook/src/components/App.js"],"names":["React","Component","notify","ToastContainer","saveToLS","getFromLS","Container","SubmitForm","ContactList","Filter","App","state","contacts","props","filter","AddContactOnSubmit","data","contact","name","number","id","find","toLowerCase","setState","preventState","deleteContact","prevState","onFilter","event","currentTarget","value","getVisibleContacts","normalizedFilter","includes","componentDidMount","componentDidUpdate","prevProps","render","visibleContacts","length"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,cAAP;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,SAAT,QAA0B,sBAA1B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,QAAf,CADJ;AAENE,MAAAA,MAAM,EAAE;AAFF,KADkB;;AAAA,SAM1BC,kBAN0B,GAMLC,IAAI,IAAI;AAC3B,YAAMC,OAAO,GAAG;AACdC,QAAAA,IAAI,EAAEF,IAAI,CAACE,IADG;AAEdC,QAAAA,MAAM,EAAEH,IAAI,CAACG,MAFC;AAGdC,QAAAA,EAAE,EAAEJ,IAAI,CAACI;AAHK,OAAhB;;AAMA,UACE,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,IAApB,CACEJ,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaI,WAAb,OAA+BN,IAAI,CAACE,IAAL,CAAUI,WAAV,EAD5C,CADF,EAIE;AACApB,QAAAA,MAAM,CAACc,IAAI,CAACE,IAAN,CAAN;AACA;AACD;;AAED,WAAKK,QAAL,CAAcC,YAAY,KAAK;AAC7BZ,QAAAA,QAAQ,EAAE,CAACK,OAAD,EAAU,GAAGO,YAAY,CAACZ,QAA1B;AADmB,OAAL,CAA1B;AAGD,KAzByB;;AAAA,SA2B1Ba,aA3B0B,GA2BVT,IAAI,IAAI;AACtB,WAAKO,QAAL,CAAcG,SAAS,KAAK;AAC1Bd,QAAAA,QAAQ,EAAEc,SAAS,CAACd,QAAV,CAAmBE,MAAnB,CAA0BG,OAAO,IAAIA,OAAO,CAACG,EAAR,KAAeJ,IAApD;AADgB,OAAL,CAAvB;AAGD,KA/ByB;;AAAA,SAiC1BW,QAjC0B,GAiCfC,KAAK,IAAI;AAClB,WAAKL,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAEc,KAAK,CAACC,aAAN,CAAoBC;AAA9B,OAAd;AACD,KAnCyB;;AAAA,SAqC1BC,kBArC0B,GAqCL,MAAM;AACzB,YAAM;AAAEjB,QAAAA,MAAF;AAAUF,QAAAA;AAAV,UAAuB,KAAKD,KAAlC;AACA,YAAMqB,gBAAgB,GAAGlB,MAAM,CAACQ,WAAP,EAAzB;AAEA,aAAOV,QAAQ,CAACE,MAAT,CAAgB,CAAC;AAAEI,QAAAA;AAAF,OAAD,KACrBA,IAAI,CAACI,WAAL,GAAmBW,QAAnB,CAA4BD,gBAA5B,CADK,CAAP;AAGD,KA5CyB;AAAA;;AA8C1BE,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA,SAAKX,QAAL,CAAc;AAAEX,MAAAA,QAAQ,EAAEP,SAAS,CAAC,UAAD;AAArB,KAAd;AACD;;AAED8B,EAAAA,kBAAkB,CAACC,SAAD,EAAYV,SAAZ,EAAuB;AACvC,QAAI,KAAKf,KAAL,CAAWC,QAAX,KAAwBc,SAAS,CAACd,QAAtC,EAAgD;AAC9CR,MAAAA,QAAQ,CAAC,UAAD,EAAa,KAAKO,KAAL,CAAWC,QAAxB,CAAR,CAD8C,CAE9C;AACD;AACF;;AAEDyB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvB,MAAAA,MAAF;AAAUF,MAAAA;AAAV,QAAuB,KAAKD,KAAlC;AACA,UAAM;AAAEc,MAAAA,aAAF;AAAiBE,MAAAA,QAAjB;AAA2BZ,MAAAA;AAA3B,QAAkD,IAAxD;AACA,UAAMuB,eAAe,GAAG,KAAKP,kBAAL,EAAxB;AAEA,wBACE,QAAC,SAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEhB;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIGH,QAAQ,CAAC2B,MAAT,IAAmB,CAAnB,iBAAwB,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEzB,MAAf;AAAuB,QAAA,QAAQ,EAAEa;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJ3B,eAKE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEW,eAAvB;AAAwC,QAAA,aAAa,EAAEb;AAAvD;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA1EyB;;AA6E5B,eAAef,GAAf","sourcesContent":["//* Service\r\nimport React, { Component } from 'react';\r\nimport notify from 'helpers/Toast';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport '../index.css';\r\nimport { saveToLS } from 'helpers/localStorage';\r\nimport { getFromLS } from 'helpers/localStorage';\r\n//* Components\r\nimport Container from './Container';\r\nimport SubmitForm from './SubmitForm';\r\nimport ContactList from './ContactList';\r\nimport Filter from './Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [...this.props.contacts],\r\n    filter: '',\r\n  };\r\n\r\n  AddContactOnSubmit = data => {\r\n    const contact = {\r\n      name: data.name,\r\n      number: data.number,\r\n      id: data.id,\r\n    };\r\n\r\n    if (\r\n      this.state.contacts.find(\r\n        contact => contact.name.toLowerCase() === data.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      notify(data.name);\r\n      return;\r\n    }\r\n\r\n    this.setState(preventState => ({\r\n      contacts: [contact, ...preventState.contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = data => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== data),\r\n    }));\r\n  };\r\n\r\n  onFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    // const contacts = localStorage.getItem('contacts');\r\n    // const parsedContacts = JSON.parse(contacts);\r\n    this.setState({ contacts: getFromLS('contacts') });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      saveToLS('contacts', this.state.contacts);\r\n      // localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const { deleteContact, onFilter, AddContactOnSubmit } = this;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <SubmitForm onSubmit={AddContactOnSubmit} />\r\n        <h1>Contacts</h1>\r\n        {contacts.length >= 2 && <Filter value={filter} onChange={onFilter} />}\r\n        <ContactList contacts={visibleContacts} deleteContact={deleteContact} />\r\n        <ToastContainer />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}